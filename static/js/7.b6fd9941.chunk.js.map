{"version":3,"sources":["components/RandomImage.js"],"names":["LoadImage","state","loaded","error","image","_this2","this","img","Image","src","props","className","onload","setState","onerror","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","ref","el","appendChild","React","Component","RandomImage","width","Math","floor","random","round","window","innerWidth","height","innerHeight","concat"],"mappings":"uJASMA,6MACJC,MAAQ,CACNC,QAAQ,EACRC,OAAO,EACPC,MAAO,QAETA,MAAQ,wFACY,IAAAC,EAAAC,KACZC,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,KAAKI,MAAMD,IACrBF,EAAII,UAAY,YAChBJ,EAAIK,OAAS,kBAAMP,EAAKQ,SAAS,CAAEX,QAAQ,KAC3CK,EAAIO,QAAU,kBAAMT,EAAKQ,SAAS,CAAEV,OAAO,KAC3CG,KAAKF,MAAQG,iDAGTD,KAAKF,QACPE,KAAKF,MAAMQ,OAAS,KACpBN,KAAKF,MAAMU,QAAU,KACrBR,KAAKF,MAAQ,uCAGR,IAAAW,EAAAT,KACP,OAAKA,KAAKL,MAAMC,OAGZI,KAAKL,MAAME,MACNa,EAAAC,EAAAC,cAAA,OAAKP,UAAU,oBAAf,uBAAuDL,KAAKI,MAAMD,KAEpEO,EAAAC,EAAAC,cAAA,OAAKP,UAAU,OAAOQ,IAAK,SAAAC,GAAE,OAAIL,EAAKd,MAAMC,QAAUa,EAAKX,OAASgB,EAAGC,YAAYN,EAAKX,UALtFY,EAAAC,EAAAC,cAAA,OAAKP,UAAU,oBAAf,2BAxBWW,IAAMC,WAiCfC,UAxCK,WAClB,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiBF,KAAKG,MAAMC,OAAOC,WAAa,MACxEC,EAASN,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiBF,KAAKG,MAAMC,OAAOG,YAAc,MAC1ExB,EAAG,yBAAAyB,OAA4BT,EAA5B,KAAAS,OAAqCF,GAC9C,OAAOhB,EAAAC,EAAAC,cAAClB,EAAD,CAAWS,IAAKA","file":"static/js/7.b6fd9941.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RandomImage = () => {\r\n  const width = Math.floor(Math.random() * 100 + Math.round(window.innerWidth / 1.2));\r\n  const height = Math.floor(Math.random() * 100 + Math.round(window.innerHeight / 1.8));\r\n  const src = `https://picsum.photos/${width}/${height}`;\r\n  return <LoadImage src={src} />;\r\n};\r\n\r\nclass LoadImage extends React.Component {\r\n  state = {\r\n    loaded: false,\r\n    error: false,\r\n    image: null\r\n  };\r\n  image = null;\r\n  componentDidMount() {\r\n    const img = new Image(); // document.createElement('img');\r\n    img.src = this.props.src;\r\n    img.className = 'img-fluid';\r\n    img.onload = () => this.setState({ loaded: true });\r\n    img.onerror = () => this.setState({ error: true });\r\n    this.image = img;\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.image) {\r\n      this.image.onload = null;\r\n      this.image.onerror = null;\r\n      this.image = null;\r\n    }\r\n  }\r\n  render() {\r\n    if (!this.state.loaded) {\r\n      return <div className=\"alert alert-info\">Loading image...</div>;\r\n    }\r\n    if (this.state.error) {\r\n      return <div className=\"alert alert-info\">Error loading image {this.props.src}</div>;\r\n    }\r\n    return <div className=\"card\" ref={el => this.state.loaded && this.image && el.appendChild(this.image)} />;\r\n  }\r\n}\r\n\r\nexport default RandomImage;\r\n"],"sourceRoot":""}