{"version":3,"sources":["components/clock.js","components/ActionButton.js","components/createPortal.js","jsPanelOptions.js","App.js","registerServiceWorker.js","index.js"],"names":["Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","_this2","timerID","setInterval","tick","clearInterval","setState","react_default","a","createElement","className","toLocaleTimeString","React","Component","ActionButton","_ref","title","comp","handleClick","modal","rest","objectWithoutProperties","assign","type","id","onClick","CreatePortal","el","document","rootNode","appendChild","removeChild","ReactDOM","createPortal","children","jsPanelOptions","theme","headerTitle","position","contentSize","width","concat","Math","round","window","innerWidth","height","contentOverflow","onwindowresize","content","panel","div","newId","append","callback","style","padding","maxHeight","innerHeight","maxWidth","onclosed","DisplayName","lazy","__webpack_require__","e","then","bind","Countries","TodoApp","SampleUsers","Promise","all","RandomImage","App","createJsPanel","action","arguments","length","undefined","app","assertThisInitialized","panels","front","resize","reposition","options","objectSpread","appPanels","jsPanel","create","defineProperty","keys","map","Comp","node","getElementById","counter","key","Array","isArray","C","react","fallback","jsPanels","actionButtonProps","components_ActionButton","renderJsPanlesInsidePortal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","render","src_App_0","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bba32881.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body text-center\">\r\n          <h1>Hello, world!</h1>\r\n          <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\n\r\nconst ActionButton = ({ title, comp, handleClick, modal, ...rest }) => {\r\n  return (\r\n    <button type=\"button\" id={title} title={title} onClick={() => handleClick(title, comp, modal)} {...rest}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass CreatePortal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.rootNode.appendChild(this.el);\r\n    // console.log(`Portal mounted, rootNode: ${this.props.rootNode.id}`);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.rootNode.removeChild(this.el);\r\n    // console.log(`Portal unmounted, rootNode: ${this.props.rootNode.id}`);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default CreatePortal;\r\n","export default {\r\n  theme: 'primary',\r\n  headerTitle: 'Default Title',\r\n  position: 'center-top 0 20%',\r\n  contentSize: {\r\n    width: `${Math.round(window.innerWidth / 1.2)}px`,\r\n    height: `auto`\r\n  },\r\n  contentOverflow: 'auto',\r\n  onwindowresize: false,\r\n  content: panel => {\r\n    const div = document.createElement('div');\r\n    const newId = `${panel.id}-node`;\r\n    div.id = newId;\r\n    panel.content.append(div);\r\n  },\r\n  callback: panel => {\r\n    panel.content.style.padding = '10px';\r\n    const maxHeight = window.innerHeight - (window.innerHeight * 30) / 100;\r\n    panel.content.style.maxHeight = `${maxHeight}px`;\r\n    panel.content.style.maxWidth = `${window.innerWidth - 20}px`;\r\n  },\r\n  onclosed: () => {}\r\n};\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { jsPanel } from 'jspanel4/es6module/jspanel';\r\nimport 'jspanel4/es6module/extensions/modal/jspanel.modal';\r\nimport 'jspanel4/dist/jspanel.min.css';\r\n\r\n// Normal components\r\nimport Clock from './components/clock';\r\nimport ActionButton from './components/ActionButton';\r\nimport CreatePortal from './components/createPortal';\r\n\r\n// jsPanel default options\r\nimport jsPanelOptions from './jsPanelOptions';\r\n\r\n// lazy loaded components\r\nconst DisplayName = lazy(() => import('./components/DisplayName'));\r\nconst Countries = lazy(() => import('./components/Countries'));\r\nconst TodoApp = lazy(() => import('./components/Todo/TodoApp'));\r\nconst SampleUsers = lazy(() => import('./components/SampleUsers'));\r\nconst RandomImage = lazy(() => import('./components/RandomImage'));\r\n\r\n// Top level React component\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      panels: {}\r\n    };\r\n  }\r\n\r\n  createJsPanel = (action, comp, modal = false) => {\r\n    // keep Main component refrence\r\n    const app = this;\r\n    // check if its already mounted, bring it to front\r\n    if (app.state.panels[action]) {\r\n      return app.state.panels[action]['panel'].front(() => {\r\n        app.state.panels[action]['panel'].resize({\r\n          height: 'auto'\r\n        });\r\n        app.state.panels[action]['panel'].reposition('center-top 0 20%');\r\n      });\r\n    }\r\n\r\n    const options = {\r\n      ...jsPanelOptions,\r\n      headerTitle: action,\r\n      onclosed: () => {\r\n        // remove closed jsPanel and its mounted component from state\r\n        const appPanels = app.state.panels;\r\n        if (appPanels[action]) {\r\n          delete appPanels[action];\r\n          app.setState({ panels: { ...appPanels } });\r\n        }\r\n      }\r\n    };\r\n    // create jsPanel\r\n    const panel = modal ? jsPanel.modal.create(options) : jsPanel.create(options);\r\n    // save panel and compponent (this will be mounted later inside panel body) reference inside state\r\n    app.setState({ panels: { ...app.state.panels, [action]: { panel, comp } } });\r\n  };\r\n\r\n  renderJsPanlesInsidePortal() {\r\n    const panels = this.state.panels;\r\n    return Object.keys(panels).map(action => {\r\n      const jsPanel = panels[action].panel;\r\n      const Comp = panels[action].comp;\r\n      const node = document.getElementById(`${jsPanel.id}-node`);\r\n      let counter = 0;\r\n      if (!Comp) return null;\r\n      return (\r\n        <CreatePortal rootNode={node} key={jsPanel.id}>\r\n          {Array.isArray(Comp) ? (\r\n            Comp.map(C => (\r\n              <Suspense key={`${jsPanel.id}-${counter++}`} fallback={<div className=\"alert alert-info\">Loading...</div>}>\r\n                <C jsPanel={jsPanel} />\r\n              </Suspense>\r\n            ))\r\n          ) : (\r\n            <Suspense fallback={<div className=\"alert alert-info\">Loading...</div>}>\r\n              <Comp jsPanel={jsPanel} />\r\n            </Suspense>\r\n          )}\r\n        </CreatePortal>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const jsPanels = Object.keys(this.state.panels);\r\n    const actionButtonProps = {\r\n      className: 'btn btn-outline-primary ml-2 mb-2',\r\n      handleClick: this.createJsPanel\r\n    };\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row bg-dark text-white shadow p-2\">\r\n          <div className=\"col-md-12\">\r\n            <h4 className=\"text-center\">jsPanel with react</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center mt-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <ActionButton {...actionButtonProps} title=\"Simple Example\" comp={DisplayName} />\r\n              <ActionButton {...actionButtonProps} title=\" Countries List\" comp={Countries} />\r\n              <ActionButton {...actionButtonProps} title=\"Todo App\" comp={TodoApp} />\r\n              <ActionButton {...actionButtonProps} title=\"Sample Users\" comp={SampleUsers} />\r\n              <ActionButton {...actionButtonProps} title=\"Random Image\" comp={RandomImage} />\r\n              <ActionButton {...actionButtonProps} title=\"Modal Example\" comp={Clock} modal={true} />\r\n              <ActionButton {...actionButtonProps} title=\"Multiple Components\" comp={[Clock, DisplayName, RandomImage, Countries]} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {jsPanels.length > 0 && this.renderJsPanlesInsidePortal()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}